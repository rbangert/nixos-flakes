"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.expandEvent = exports.expand = void 0;
const Types_1 = require("../Types");
const luxon_1 = require("luxon");
const expand = (dateRange, recurrence, limit) => {
    const instanceDuration = dateRange.toDateTime.diff(dateRange.fromDateTime);
    const startTime = dateRange.fromDateTime;
    const every = luxon_1.Duration.fromObject(recurrence.every);
    const untilTimes = Math.min(recurrence.for?.times || limit, limit);
    let untilDate;
    if (typeof recurrence.for !== "undefined" && !recurrence.for.times) {
        const untilDuration = luxon_1.Duration.fromObject(recurrence.for);
        untilDate = startTime.plus(untilDuration);
    }
    const expansion = [startTime];
    for (let i = 1; i < untilTimes; i++) {
        const previous = expansion[i - 1];
        const next = previous.plus(every);
        if (untilDate && +next >= +untilDate) {
            break;
        }
        expansion.push(next);
    }
    return expansion.map((dt) => ({
        fromDateTime: dt,
        toDateTime: dt.plus(instanceDuration),
    }));
};
exports.expand = expand;
const expandEvent = (event, limit) => {
    if (!event.recurrence || !limit) {
        return [event];
    }
    return (0, exports.expand)((0, Types_1.toDateRange)(event.dateRangeIso), event.recurrence, limit).map((dr) => ({
        ...event,
        dateRangeIso: (0, Types_1.toDateRangeIso)(dr),
    }));
};
exports.expandEvent = expandEvent;
